apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode readVersionCode()
        versionName readVersionName()
        consumerProguardFiles "consumer-proguard-rules.pro"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }

    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def file = output.outputFile
            output.outputFile =
                    new File(file.parent,
                            file.name.replace("lockerui", "cs-locker-ui-sdk").replace(".aar", "-" + defaultConfig.versionName + ".aar"))

        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'cz.csas:cs-core-sdk:1.1.1@aar'
    compile 'com.android.support:appcompat-v7:25.3.1'
}

// maven pom specs

group = 'cz.csas'
version = readVersionName()

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                // name 'cz.csas.core'
                description = 'LockerUI SDK project powered by Ceska Sporitelna a.s.'
                url 'https://github.com/Ceskasporitelna/cs-locker-ui-sdk-droid'

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'hauseja3'
                        name 'Jan Hauser'
                        email 'jan.hauser@applifting.cz'
                    }
                }
                scm {
                    connection 'https://github.com/Ceskasporitelna/cs-locker-ui-sdk-droid.git'
                    developerConnection 'https://github.com/Ceskasporitelna/cs-locker-ui-sdk-droid.git'
                    url 'https://github.com/Ceskasporitelna/cs-locker-ui-sdk-droid'
                }
            }
        }
    }
}


// Thanks to https://medium.com/@kmlong1183/using-fastlane-tools-and-android-2e8d76bb138b#.ew4kj88sa
def readVersionName() {
    def version = readVersion()
    return "${version["major"]}.${version["minor"]}.${version["patch"]}"
}

def readVersionCode() {
    def version = readVersion()
    def patch = version["patch"] as int
    return patch
}

def readVersion() {
    def versionFile = new File(project.rootDir, "version.properties")
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }

    // safety defaults
    if (!version["major"]) version["major"] = "1"
    if (!version["minor"]) version["minor"] = "0"
    if (!version["patch"]) version["patch"] = "0"
    return version
}

// generate the javadoc and sources https://code.tutsplus.com/tutorials/creating-and-publishing-an-android-library--cms-24582#

task sourcesJar(type: Jar) {
    baseName = "cs-locker-ui-sdk"
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    baseName = "cs-locker-ui-sdk"
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}